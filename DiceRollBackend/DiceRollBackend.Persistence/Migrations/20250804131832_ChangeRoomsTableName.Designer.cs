// <auto-generated />
using System;
using DiceRollBackend.Persistence.DbContexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace DiceRollBackend.Persistence.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250804131832_ChangeRoomsTableName")]
    partial class ChangeRoomsTableName
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("DiceRollBackend.Domain.Entities.Room", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid?>("ActiveUserId")
                        .HasColumnType("uuid");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(8)
                        .HasColumnType("character varying(8)");

                    b.HasKey("Id");

                    b.HasIndex("ActiveUserId");

                    b.ToTable("rooms", (string)null);
                });

            modelBuilder.Entity("DiceRollBackend.Domain.Entities.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("character varying(128)");

                    b.Property<Guid?>("RoomId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("RoomId");

                    b.ToTable("users", (string)null);
                });

            modelBuilder.Entity("DiceRollBackend.Domain.Entities.Room", b =>
                {
                    b.HasOne("DiceRollBackend.Domain.Entities.User", "ActiveUser")
                        .WithMany()
                        .HasForeignKey("ActiveUserId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("ActiveUser");
                });

            modelBuilder.Entity("DiceRollBackend.Domain.Entities.User", b =>
                {
                    b.HasOne("DiceRollBackend.Domain.Entities.Room", "Room")
                        .WithMany("Users")
                        .HasForeignKey("RoomId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("Room");
                });

            modelBuilder.Entity("DiceRollBackend.Domain.Entities.Room", b =>
                {
                    b.Navigation("Users");
                });
#pragma warning restore 612, 618
        }
    }
}
